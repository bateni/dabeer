%D \module
%D   [      file=p-dabeer,
%D        version=0.40,
%D          title=\CONTEXT\ User Module,
%D       subtitle=dabeer for Persian typesetting,
%D         author={Mohammad Hossein Bateni},
%D           date=\currentdate,
%D      copyright={Mohammad Hossein Bateni},
%D        license=GNU General Public License v2]

% dabeer module for Persian typesetting in ConTeXt
% Copyright (C) 2015, 2016  Mohammad Hossein Bateni

% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU General Public License
% as published by the Free Software Foundation; either version 2
% of the License, or (at your option) any later version.

% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.

% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

\setgvalue{DabeerVersion}{0.40}
%% TODO: add automatic conversion from Latin to Persian numbers in Lua.
\setgvalue{DabeerVersionFa}{\LTR{۰٫۴۰}}
\writestatus{dabeer}{Loading module version \DabeerVersion}

%D It is sometimes more convenient to use Persian percent sign for commenting.
\catcode`٪=14
\chardef\٪=`\٪

%% TODO: method should be an option
%D Set up the default directions.

%D \type{method=default} is not recommended at all.  \type{method=one}
%D and \type{method=two} are both good.
\setupdirections[bidi=global,method=one]
\setupalign[r2l]

%D Convenience macros for text direction.  These give \type{\LTR} and
%D \type{\RTL} in addition to their start/stop block environments.
\definestartstop[LTR][before={\begingroup\lefttoright},after=\endgroup]
\definestartstop[RTL][before={\begingroup\righttoleft},after=\endgroup]

\writestatus{loading}{font' companion for dabeer}
\usemodule[dabeer-font]

%D We do not like to see special characters such as ZWNJ.
\setcharacterstripping[1]

%D Persian fonts usually have incorrect heights.  We fix this issue here.
\setupinterlinespace[line=3.2ex]  % default is 2.8ex

%D While we're at it, we might as well increase the parskip to make it more pleasing.
%D A more systematic way to handle this might be to use \type{\definewhitespacemethod}.
%D \type{halfline} and a bunch of other methods are already defined.
\definemeasure
  [defaultparskip]
  [0.3\baselineskip]

\setupwhitespace
  [\measure{defaultparskip}]

%D The following will fix \type{\quote} and \type{quotation}
%D delimiters.  I have not seen the half-guillemots in any real text
%D but I put it here as reference.  This is easy to change.
%D As of 8/9/2016, 'persian' has been added as a language to CONTEXT.
%D This automatically fixes some of the issues.  If one wants to use
%D normal quotation marks, say, in English text, it is advisable to
%D use \type{\language[en]} for that part of the text.
\doifdefinedelse{dabeer_patch_core_con_date_persian_digits}
{
 \writestatus{dabeer}{we have the date patch}
 \def\shortjalalidatefmt  {jalali:to,yy>persian,/,M>persian,/,d>persian}
 \def\longjalalidatefmt   {jalali:to,day>persian,month:jalali,year>persian}
 \def\longgregoriandatefmt{day>persian,month,year>persian}
}{
 \writestatus{dabeer}{no date patch applied}
 \def\shortjalalidatefmt  {jalali:to,yy,/,M,/,d}
 \def\longjalalidatefmt   {jalali:to,day,month:jalali,year}
 \def\longgregoriandatefmt{day,month,year}
}
\installlanguage [fa][default=pe,date=\longjalalidatefmt]
\mainlanguage[fa]
%% TODO: I still like to define the different single quote, and also
%% customize dates.  Specifically we'd better define a fa-ir setting
%% to use Jalali dates.  In June 2016, Jalali dates were added to
%% CONTEXT but the numbers cannot still use Persian digits.
%\def\guilsinglleft{‹}
%\def\guilsinglright{›}
%\setupquotation[left=\leftguillemot,right=\rightguillemot]
%\setupquote[left=\guilsinglleft,right=\guilsinglright]

%D The following enable the use of \type{\digits} macro to get correct
%D Persian math decimal separtor.  It might have been, though, if this
%D was customized for language `pe'.
\def\digitsperiodsymbol{٫}
\def\digitscommasymbol{٬}

%D In Persian documents, we prefer all the numbers to use Persian
%D digits unless there is a reason not to (for instance, it is part of
%D an English text).  \CONTEXT\ provides several number conversions,
%D we plan to add a few more.  However, all of these had better be
%D placed inside \type{\LTR} macros because the bidi algorithm is not
%D applied everywhere.

%D We like to have Persian decimals for page numbers.  The proper place
%D to define these is in a style file (say, for an article or a book)
%D where, for instance, different numbering (digits, alphabetic, etc.)
%D may be used in frontmatter, body, appendices, etc.  Nonetheless, we
%D provide a default that works for most documents.  Same goes with
%D other numbering elements.
%% TODO: Is it possible to define ``shortcuts'' like n,g,a?
\setuppagenumber[numberconversion=persiandecimals]

%D {\it Warning}: For a strange reason the following does not work. \\
%D \type{\define[1]\LTRpersiandecimals#1{\LTR{\persiandecimals{#1}}}}
%% TODO: the above has an extra #1; try without that to make sure.
\define[1]\LTRpersiandecimals{{\lefttoright\persiandecimals{#1}}}
\defineconversion[LTRpersiandecimals][\LTRpersiandecimals]

%D Goals we aim to achieve for section heads:
%D \startitemize[packed]
%D   \item Use Persian digits;
%D   \item Place chapter number to the {\it right\/} of the section number;
%D   \item Typeset each number from left to right; and
%D   \item Separate chapter and section numbers by dash instead of dot.
%D \stopitemize
\setuphead[part,chapter,section]
          [conversion=LTRpersiandecimals,numberstyle=\righttoleft]

\defineseparatorset[dashsep][-,-,-,-]
% TODO: is this sufficient?
\setuphead[section][sectionseparatorset=dashsep]

%D Footnote definitions.  We have several requirements here.
%D \startitemize[packed]
%D \item Footnote text should be processed by bidi algorithm.
%D \item When using the default \type{\footnote} command, footnote
%D text should use surrounding text's direction to determine its 
%D direction at the bottom of the page.
%D \item However, we can use \type{LTRfootnote} and \type{RTLfootnote}
%D to force a direction for footnotes regardless of the surroundings.
%D \item Footnote rule's location (left or right) is determined by
%D the direction of the first paragraph of footnote text on the page.
%D \item Footnote numbers are typeset using Persian decimals when in
%D RTL surroundings and using Latin numerals when in LTR setting.
%D \stopitemize
\setupfootnotes[rule=paragraph]
\startsetups[bidi:footnotes]
  \setupdirections[bidi=on]
\stopsetups
\setupnotes[footnote][setups=bidi:footnotes]
\setupnotation[footnote][numberconversion=contextdecimals]

%D We define a number conversion called \type{contextdecimals} that turns into
%D \type{numbers} in LTR surroundings and to \type{persiandecimals} when in RTL
%D environment.
%% display or inline?
\define[1]\contextdecimals{%
  \ifconditional\displaylefttoright\numbers{#1}\else\LTRpersiandecimals{#1}\fi%
}
\defineconversion[contextdecimals][\contextdecimals]

\definenote   [LTRfootnote][footnote]
\setupnotation[LTRfootnote][before=\lefttoright]
\definenote   [RTLfootnote][footnote]
\setupnotation[RTLfootnote][before=\righttoleft]

%D Numbering of math equations using \type{\placeformula} is already
%D done on the left-hand side if key \type{align} is not set. Unfortunately,
%D  the positioning seems a little off.  Setting \type{align} to \type{middle}
%D or the other options fixes the issue but takes the number to the right-hand
%D side.  We change the numbering to use Persian digits.  (Incidentally
%D \type{\tracemathtrue} stops working in the buggy case.)
%% More info: http://wiki.contextgarden.net/Math/Display
\setupformula[numberconversion=persiandecimals,
                         align=middle,
                      location=left,
                         strut=yes]
%D Let us define the familiar \type{\eqref} command from \LATEX.  Recall that
%D this has an optional first argument (in braces): \type{\eqref[reftag]} or
%D \type{\eqref{Equation~}[reftag]}.
\definereferenceformat[eqref][left=(,right=)]

%D We add some more conversions and conversion shortcuts as promised.
\writestatus{loading}{'num' companion for dabeer}
\registerctxluafile{p-dabeer-num}{0.1}

\unprotect
\define[1]\dabeerpersiannumerals{%
  \clf_dabeer_persian_numerals\numexpr#1\relax{normal}}
\define[1]\dabeeralternatepersiannumerals{%
  \clf_dabeer_persian_numerals\numexpr#1\relax{alternate}}
\define[1]\dabeerabjadnumerals{%
  \clf_dabeer_abjad_numerals\numexpr#1\relax}
\protect

\defineconversion[ع][\LTRpersiandecimals]
\defineconversion[عددی][\LTRpersiandecimals]
\defineconversion[آ][\dabeerpersiannumerals]
\defineconversion[الف][\dabeeralternatepersiannumerals]
%D We fix the abjads to use correct alef, heh, kaf and yeh.
\defineconversion[ا][\dabeerabjadnumerals]  
\defineconversion[ابجد][\dabeerabjadnumerals]


%% TODO: implement the following.
%\defineconversion[ح][\horoofnumerals]
%\defineconversion[حرفی][\horoofnumerals]
%\defineconversion[ت][\ordinalpersiannumerals]
%\defineconversion[ترتیبی][\ordinalpersiannumerals]

%D Fixed direction of columns and columnized items to be RTL.
%D To set this for an individual \type{\startitemize}, one can
%D use \type{\startitemize[][direction=reverse]}.
\setupmixedcolumns[itemgroupcolumns][direction=reverse]

%D Indices (or their generalization in \CONTEXT\ called \type{register}s)
%D need special case in the RTL environment, even more so if we want to
%D get alphabetical ordering right.  On this the current sorting mechanism
%D unfortunately does not support the full unicode collation algorithm.
%D Nevertheless, another problem is that for a language like \quote{Persian},
%D the correct sort order is also not fixed.  Looking at a few dictionaries
%D or encyclopedias, even word lists published by the Persian Academy, we
%D see some inconsistencies.  Here we provide simple definitions to get the
%D basic issues right.
\startluacode
 defs = sorters.definitions 
 fa_defs = {
   replacements = {
-- the replacement for alef is not okay because it produces
-- undefined sort order for `اب' and `آب'.
--     { "ا", "آ" },
{"ك", "ک"},
{"ي", "ی"},
   },
   entries = {
["آ"] = "الف",
["ه"] = "ه‍",
   },
   orders = { 
     "آ", "ب", "پ", "ت", "ث",
     "ج", "چ", "ح", "خ",
"د", "ذ", "ر", "ز", "ژ",     
"س", "ش", "ص", "ض", "ط", "ظ",     
"ع", "غ", "ف", "ق", "ک", "گ",
"ل", "م", "ن", "و", "ه", "ی",
 },
   lower = {
["ا"] = "آ",
["ء"] = "آ",
["أ"] = "آ",
["إ"] = "آ",
["ؤ"] = "و",
["ئ"] = "ی",
   },

   method="zm,pm,uc",
 }

 defs['fa'] = fa_defs
\stopluacode

\startsetups[register:interlinespace]
    \setupinterlinespace[height=0.6,depth=0.4,line=3.2ex]
\stopsetups

\setupregister[index]
              [n=2,
%% to fix entries starting with English.
               pagestyle=\zwnj,
               pagecommand=\MyRegisterPageCommand,
               compress=yes] 
\setupmixedcolumns[register][direction=reverse,
                             setups=register:interlinespace]
%D Until \CONTEXT\ supports customized comma in registers, we use the
%D following hack, that gets it right in page numbers.  But it cannot
%D fix the one appearing before \quote{see also}.
\def\MyRegisterPageCommand#1{%
  \def\registerpageseparatorsymbol{،\space}%
  #1}
